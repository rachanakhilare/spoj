#include <iostream>
#include<bits/stdc++.h>
using namespace std;
vector<int>graph[1000];
void topoU(int i,bool vis[],stack<int>&s);
int *topoSort(vector<int>graph[],int n);
int main()
{
    memset(graph,0,sizeof graph);
    int n,e,u,v;
    cin>>n>>e;
    for(int i=0;i<e;i++)
    {

        cin>>u>>v;
        graph[u].push_back(v);
    }
    topoSort(graph,e);

    return 0;
}
int *topoSort(vector<int>graph[],int n)
{
    bool *vis=new bool[n];
    stack<int>s;
    for(int i=0;i<n;i++)
    {
        vis[i]=false;
    }
    for(int i=0;i<n;i++)
    {
        if(!vis[i])
        {
            topoU(i,vis,s);
        }
    }
    while(!s.empty())
    {
        cout<<s.top()<<" ";
        s.pop();
    }
}
void topoU(int i,bool vis[],stack<int>&s)
{
    vis[i]=true;
    vector<int>::iterator it;
    for(it=graph[i].begin();it!=graph[i].end();it++)
    {
        if(!vis[*it])
        {
            topoU(*it,vis,s);
        }
    }
    s.push(i);
}
