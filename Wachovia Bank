#include <iostream>
#include<algorithm>
using namespace std;
int knapsack(int n,int W,int wt[],int val[]);
int main()
{int n,W,t;
    cin>>t;
    while(t--)
    {
        cin>>W>>n;
        int wt[n],val[n];
        for(int i=0;i<n;i++)
        {

            cin>>wt[i]>>val[i];
        }
        int ans=knapsack(n,W,wt,val);
        cout<<"Hey stupid robber, you can get "<<ans<<"."<<endl;
    }
    return 0;
}
int knapsack(int n,int W,int wt[],int val[])
{
    int i,w;
    int k[n+1][W+1];
    for(i=0;i<=n;i++)
    {
        for(w=0;w<=W;w++)
        {
            if(i==0  || w==0)
                k[i][w]=0;
            else if(wt[i-1]<=w)
            {
                k[i][w]=max(val[i-1]+k[i-1][w-wt[i-1]],k[i-1][w]);
            }
            else{
                k[i][w]=k[i-1][w];
            }
        }
    }
    return k[n][W];
}
